{"ast":null,"code":"var _jsxFileName = \"/Users/deekshitha/Desktop/Memories/client/src/components/Form/Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.Paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Editing' : 'Creating', \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({\n          ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({\n          ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({\n          ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({\n            ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"nr1aFA8kdzrVH2V/jFjC6sTL1ws=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","useDispatch","useSelector","createPost","updatePost","jsxDEV","_jsxDEV","Form","currentId","setCurrentId","_s","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","classes","dispatch","clear","handleSubmit","e","preventDefault","className","children","autoComplete","noValidate","root","form","onSubmit","variant","fileName","_jsxFileName","lineNumber","columnNumber","name","label","fullWidth","value","onChange","target","split","fileInput","type","multiple","onDone","base64","buttonSubmit","color","size","onClick","_c","$RefreshReg$"],"sources":["/Users/deekshitha/Desktop/Memories/client/src/components/Form/Form.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts.js';\n\n\nconst Form = ({currentId, setCurrentId}) => {\n    const [postData, setPostData] = useState ({\n        creator: '', title: '', message: '', tags: '', selectedFile: ''\n    })\n    const post = useSelector((state) => (currentId ? state.posts.find((message) => message._id === currentId) : null));\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (post) setPostData(post);\n    },[post]);\n    \n    const clear = () => {\n        setCurrentId(0);\n        setPostData({  title: '', message: '', tags: '', selectedFile: '' });\n      };\n    \n      const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (currentId === 0) {\n          dispatch(createPost(postData));\n          clear();\n        } else {\n          dispatch(updatePost(currentId, postData));\n          clear();\n        }\n      };\n    \n    return (\n        <Paper className={classes.Paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n            <Typography variant='h6'>\n                {currentId? 'Editing': 'Creating'} a Memory\n            </Typography>\n            <TextField name='title' variant='outlined' label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value})}/>\n            <TextField name='message' variant='outlined' label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value})}/>\n            <TextField name='tags' variant='outlined' label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',')})}/>\n            <div className={classes.fileInput}>\n            <FileBase\n                type=\"file\"\n                multiple={false}\n                onDone = {({base64}) => setPostData({ ...postData, selectedFile: base64})}\n                />\n            </div>\n            <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    );\n}\n\nexport default Form;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACxE,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,SAAS,MAAM,UAAU;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhE,MAAMC,IAAI,GAAGA,CAAC;EAACC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAE;IACtCoB,OAAO,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,IAAI,EAAE,EAAE;IAAEC,YAAY,EAAE;EACjE,CAAC,CAAC;EACF,MAAMC,IAAI,GAAGhB,WAAW,CAAEiB,KAAK,IAAMX,SAAS,GAAGW,KAAK,CAACC,KAAK,CAACC,IAAI,CAAEN,OAAO,IAAKA,OAAO,CAACO,GAAG,KAAKd,SAAS,CAAC,GAAG,IAAK,CAAC;EAClH,MAAMe,OAAO,GAAGvB,SAAS,CAAC,CAAC;EAC3B,MAAMwB,QAAQ,GAAGvB,WAAW,CAAC,CAAC;EAC9BP,SAAS,CAAC,MAAM;IACZ,IAAIwB,IAAI,EAAEN,WAAW,CAACM,IAAI,CAAC;EAC/B,CAAC,EAAC,CAACA,IAAI,CAAC,CAAC;EAET,MAAMO,KAAK,GAAGA,CAAA,KAAM;IAChBhB,YAAY,CAAC,CAAC,CAAC;IACfG,WAAW,CAAC;MAAGE,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAG,CAAC,CAAC;EACtE,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIpB,SAAS,KAAK,CAAC,EAAE;MACnBgB,QAAQ,CAACrB,UAAU,CAACQ,QAAQ,CAAC,CAAC;MAC9Bc,KAAK,CAAC,CAAC;IACT,CAAC,MAAM;MACLD,QAAQ,CAACpB,UAAU,CAACI,SAAS,EAAEG,QAAQ,CAAC,CAAC;MACzCc,KAAK,CAAC,CAAC;IACT;EACF,CAAC;EAEH,oBACInB,OAAA,CAACR,KAAK;IAAC+B,SAAS,EAAEN,OAAO,CAACzB,KAAM;IAAAgC,QAAA,eAC5BxB,OAAA;MAAMyB,YAAY,EAAC,KAAK;MAACC,UAAU;MAACH,SAAS,EAAG,GAAEN,OAAO,CAACU,IAAK,IAAGV,OAAO,CAACW,IAAK,EAAE;MAACC,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBACzGxB,OAAA,CAACT,UAAU;QAACuC,OAAO,EAAC,IAAI;QAAAN,QAAA,GACnBtB,SAAS,GAAE,SAAS,GAAE,UAAU,EAAC,WACtC;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACblC,OAAA,CAACX,SAAS;QAAC8C,IAAI,EAAC,OAAO;QAACL,OAAO,EAAC,UAAU;QAACM,KAAK,EAAC,OAAO;QAACC,SAAS;QAACC,KAAK,EAAEjC,QAAQ,CAACG,KAAM;QAAC+B,QAAQ,EAAGlB,CAAC,IAAKf,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,KAAK,EAAEa,CAAC,CAACmB,MAAM,CAACF;QAAK,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChKlC,OAAA,CAACX,SAAS;QAAC8C,IAAI,EAAC,SAAS;QAACL,OAAO,EAAC,UAAU;QAACM,KAAK,EAAC,SAAS;QAACC,SAAS;QAACC,KAAK,EAAEjC,QAAQ,CAACI,OAAQ;QAAC8B,QAAQ,EAAGlB,CAAC,IAAKf,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,OAAO,EAAEY,CAAC,CAACmB,MAAM,CAACF;QAAK,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxKlC,OAAA,CAACX,SAAS;QAAC8C,IAAI,EAAC,MAAM;QAACL,OAAO,EAAC,UAAU;QAACM,KAAK,EAAC,MAAM;QAACC,SAAS;QAACC,KAAK,EAAEjC,QAAQ,CAACK,IAAK;QAAC6B,QAAQ,EAAGlB,CAAC,IAAKf,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEK,IAAI,EAAEW,CAAC,CAACmB,MAAM,CAACF,KAAK,CAACG,KAAK,CAAC,GAAG;QAAC,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvKlC,OAAA;QAAKuB,SAAS,EAAEN,OAAO,CAACyB,SAAU;QAAAlB,QAAA,eAClCxB,OAAA,CAACP,QAAQ;UACLkD,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAE,KAAM;UAChBC,MAAM,EAAIA,CAAC;YAACC;UAAM,CAAC,KAAKxC,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEM,YAAY,EAAEmC;UAAM,CAAC;QAAE;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNlC,OAAA,CAACV,MAAM;QAACiC,SAAS,EAAEN,OAAO,CAAC8B,YAAa;QAACjB,OAAO,EAAC,WAAW;QAACkB,KAAK,EAAC,SAAS;QAACC,IAAI,EAAC,OAAO;QAACN,IAAI,EAAC,QAAQ;QAACN,SAAS;QAAAb,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjIlC,OAAA,CAACV,MAAM;QAACwC,OAAO,EAAC,WAAW;QAACkB,KAAK,EAAC,WAAW;QAACC,IAAI,EAAC,OAAO;QAACC,OAAO,EAAE/B,KAAM;QAACkB,SAAS;QAAAb,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7F;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEhB,CAAC;AAAA9B,EAAA,CAjDKH,IAAI;EAAA,QAIOL,WAAW,EACRF,SAAS,EACRC,WAAW;AAAA;AAAAwD,EAAA,GAN1BlD,IAAI;AAmDV,eAAeA,IAAI;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}