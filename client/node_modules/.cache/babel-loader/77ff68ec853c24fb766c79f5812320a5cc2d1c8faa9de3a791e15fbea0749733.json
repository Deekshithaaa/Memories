{"ast":null,"code":"import * as api from \"../api\";\nimport { CREATE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, UPDATE, DELETE, FETCH_ALL, LIKE } from '../constants/actionTypes.js';\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(`Error status: ${error.response.status}`);\n      console.log(`Error data: ${error.response.data}`);\n      console.log(`Error headers: ${error.response.headers}`);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.log(`No response received for the request: ${error.request}`);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  }\n};\nexport const getPostBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response && error.response.data) {\n      console.log(error.response.data); // More detailed error message from the server\n    } else {\n      console.log(error.message);\n    }\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(id, post);\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {}\n};","map":{"version":3,"names":["api","CREATE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","UPDATE","DELETE","FETCH_ALL","LIKE","getPosts","page","dispatch","type","data","fetchPosts","console","log","payload","error","response","status","headers","request","message","config","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"sources":["/Users/deekshitha/Desktop/Memories/client/src/actions/posts.js"],"sourcesContent":["import * as api from \"../api\";\nimport {CREATE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, UPDATE, DELETE, FETCH_ALL, LIKE} from '../constants/actionTypes.js'\n\nexport const getPosts = (page) => async (dispatch) => {\n\n    try {\n        dispatch({ type: START_LOADING })\n        const {data} = await api.fetchPosts(page);\n        console.log(data);\n        dispatch( {type: FETCH_ALL, payload: data } );\n\n    } catch (error) {\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            console.log(`Error status: ${error.response.status}`);\n            console.log(`Error data: ${error.response.data}`);\n            console.log(`Error headers: ${error.response.headers}`);\n        } else if (error.request) {\n            // The request was made but no response was received\n            console.log(`No response received for the request: ${error.request}`);\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            console.log('Error', error.message);\n        }\n        console.log(error.config);\n    } \n    \n}\n\nexport const getPostBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch( {type: FETCH_BY_SEARCH, payload: data } );\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post);\n        dispatch( {type: CREATE, payload: data } );\n    } catch (error) {\n        if (error.response && error.response.data) {\n            console.log(error.response.data); // More detailed error message from the server\n        } else {\n            console.log(error.message);\n        }\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n      const { data } = await api.updatePost(id, post);\n      dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        \n        console.log(id, post);\n        \n      console.log(error.message);\n      \n    }\n  };\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id });\n        \n    } catch (error) {\n        console.log(error);\n        \n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n\n    const { data } = await api.likePost(id);\n      dispatch({ type: LIKE, payload: data });\n        \n    } catch (error) {\n        \n    }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}