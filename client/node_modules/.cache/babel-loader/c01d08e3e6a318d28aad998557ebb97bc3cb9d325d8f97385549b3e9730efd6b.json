{"ast":null,"code":"var _jsxFileName = \"/Users/deekshitha/Desktop/My projects /Memories/client/src/actions/auth.js\";\nimport { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nimport { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const signin = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signIn(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    router('/');\n  } catch (error) {\n    console.log(error);\n\n    // Open dialog box if error occurs\n    setOpenErrorDialog(true);\n  }\n};\n\n// State for dialog box\nconst [openErrorDialog, setOpenErrorDialog] = useState(false);\n\n// Function to close dialog box\nconst handleCloseErrorDialog = () => {\n  setOpenErrorDialog(false);\n};\n\n// JSX for dialog box\n/*#__PURE__*/_jsxDEV(Dialog, {\n  open: openErrorDialog,\n  onClose: handleCloseErrorDialog,\n  children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      children: \"Incorrect credentials. Please enter correct details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleCloseErrorDialog,\n      color: \"primary\",\n      children: \"OK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 1\n}, this);\nexport const signup = (formData, router) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.signUp(formData);\n    dispatch({\n      type: AUTH,\n      data\n    });\n    router('/');\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["AUTH","api","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","jsxDEV","_jsxDEV","signin","formData","router","dispatch","data","signIn","type","error","console","log","setOpenErrorDialog","openErrorDialog","handleCloseErrorDialog","open","onClose","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","color","signup","signUp"],"sources":["/Users/deekshitha/Desktop/My projects /Memories/client/src/actions/auth.js"],"sourcesContent":["import { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nimport { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography } from '@material-ui/core';\n\nexport const signin = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signIn(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router('/');\n  } catch (error) {\n    console.log(error);\n\n    // Open dialog box if error occurs\n    setOpenErrorDialog(true);\n  }\n};\n\n// State for dialog box\nconst [openErrorDialog, setOpenErrorDialog] = useState(false);\n\n// Function to close dialog box\nconst handleCloseErrorDialog = () => {\n  setOpenErrorDialog(false);\n};\n\n// JSX for dialog box\n<Dialog open={openErrorDialog} onClose={handleCloseErrorDialog}>\n  <DialogTitle>Error</DialogTitle>\n  <DialogContent>\n    <Typography variant=\"body1\">Incorrect credentials. Please enter correct details.</Typography>\n  </DialogContent>\n  <DialogActions>\n    <Button onClick={handleCloseErrorDialog} color=\"primary\">OK</Button>\n  </DialogActions>\n</Dialog>\n\n\nexport const signup = (formData, router) => async (dispatch) => {\n  try {\n    const { data } = await api.signUp(formData);\n\n    dispatch({ type: AUTH, data });\n\n    router('/');\n  } catch (error) {\n    console.log(error);\n  }\n};"],"mappings":";AAAA,SAASA,IAAI,QAAQ,0BAA0B;AAC/C,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,MAAM,EAAEC,UAAU,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1G,OAAO,MAAMC,MAAM,GAAGA,CAACC,QAAQ,EAAEC,MAAM,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMd,GAAG,CAACe,MAAM,CAACJ,QAAQ,CAAC;IAE3CE,QAAQ,CAAC;MAAEG,IAAI,EAAEjB,IAAI;MAAEe;IAAK,CAAC,CAAC;IAE9BF,MAAM,CAAC,GAAG,CAAC;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;;IAElB;IACAG,kBAAkB,CAAC,IAAI,CAAC;EAC1B;AACF,CAAC;;AAED;AACA,MAAM,CAACC,eAAe,EAAED,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;;AAE7D;AACA,MAAMqB,sBAAsB,GAAGA,CAAA,KAAM;EACnCF,kBAAkB,CAAC,KAAK,CAAC;AAC3B,CAAC;;AAED;AACA,aAAAX,OAAA,CAACP,MAAM;EAACqB,IAAI,EAAEF,eAAgB;EAACG,OAAO,EAAEF,sBAAuB;EAAAG,QAAA,gBAC7DhB,OAAA,CAACN,WAAW;IAAAsB,QAAA,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAa,CAAC,eAChCpB,OAAA,CAACL,aAAa;IAAAqB,QAAA,eACZhB,OAAA,CAACF,UAAU;MAACuB,OAAO,EAAC,OAAO;MAAAL,QAAA,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC,eAChBpB,OAAA,CAACJ,aAAa;IAAAoB,QAAA,eACZhB,OAAA,CAACH,MAAM;MAACyB,OAAO,EAAET,sBAAuB;MAACU,KAAK,EAAC,SAAS;MAAAP,QAAA,EAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACV,CAAC;AAGT,OAAO,MAAMI,MAAM,GAAGA,CAACtB,QAAQ,EAAEC,MAAM,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMd,GAAG,CAACkC,MAAM,CAACvB,QAAQ,CAAC;IAE3CE,QAAQ,CAAC;MAAEG,IAAI,EAAEjB,IAAI;MAAEe;IAAK,CAAC,CAAC;IAE9BF,MAAM,CAAC,GAAG,CAAC;EACb,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}