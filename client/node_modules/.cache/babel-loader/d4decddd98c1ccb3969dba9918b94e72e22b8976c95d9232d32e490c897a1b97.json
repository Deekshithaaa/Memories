{"ast":null,"code":"import * as api from \"../api\";\nimport { CREATE, FETCH_BY_SEARCH, UPDATE, DELETE, FETCH_ALL, LIKE } from '../constants/actionTypes.js';\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response && error.response.data) {\n      console.log(error.response.data); // More detailed error message from the server\n    } else {\n      console.log(error.message);\n    }\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(id, post);\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {}\n};","map":{"version":3,"names":["api","CREATE","FETCH_BY_SEARCH","UPDATE","DELETE","FETCH_ALL","LIKE","getPosts","page","dispatch","data","fetchPosts","console","log","type","payload","error","message","getPostBySearch","searchQuery","fetchPostsBySearch","createPost","post","response","updatePost","id","deletePost","likePost"],"sources":["/Users/deekshitha/Desktop/Memories/client/src/actions/posts.js"],"sourcesContent":["import * as api from \"../api\";\nimport {CREATE, FETCH_BY_SEARCH, UPDATE, DELETE, FETCH_ALL, LIKE} from '../constants/actionTypes.js'\n\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        const {data} = await api.fetchPosts(page);\n        console.log(data);\n        dispatch( {type: FETCH_ALL, payload: data } );\n\n    } catch (error) {\n        console.log(error.message);\n    } \n    \n}\n\nexport const getPostBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        const {data: {data}} = await api.fetchPostsBySearch(searchQuery);\n        dispatch( {type: FETCH_BY_SEARCH, payload: data } );\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const {data} = await api.createPost(post);\n        dispatch( {type: CREATE, payload: data } );\n    } catch (error) {\n        if (error.response && error.response.data) {\n            console.log(error.response.data); // More detailed error message from the server\n        } else {\n            console.log(error.message);\n        }\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n      const { data } = await api.updatePost(id, post);\n      dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        \n        console.log(id, post);\n        \n      console.log(error.message);\n      \n    }\n  };\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id });\n        \n    } catch (error) {\n        console.log(error);\n        \n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n\n    const { data } = await api.likePost(id);\n      dispatch({ type: LIKE, payload: data });\n        \n    } catch (error) {\n        \n    }\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}